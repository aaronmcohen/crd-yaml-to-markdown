name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d-%HH-%MM')"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: BUILD-${{ steps.date.outputs.date }}
        release_name: Release  ${{ steps.date.outputs.date }}
        body: |
          Automated release.
        draft: false
        prerelease: true
  build:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        target:
        - "x86_64-apple-darwin"
        - "aarch64-apple-darwin"
    steps:
    - name: Update
      run: sudo apt-get update && sudo apt-get upgrade
    - uses: actions/checkout@v2
    - name: Update RustUp
      run: rustup update
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: install cross
      run: cargo install cross
    - name: Build
      run: cross build --target  --target ${{ matrix.target }}
    - name: Run tests
      run: cross test --verbose
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: target/release/crd_yaml_to_markdown
        asset_name: crd-yaml-to-markdown-${{ matrix.target }}
        asset_content_type: application/octet-stream
